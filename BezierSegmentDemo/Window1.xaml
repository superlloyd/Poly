<Window x:Class="BezierSegmentDemo.Window1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:BezierSegmentDemo="clr-namespace:BezierSegmentDemo"
    Title="BezierSegment demonstration" Height="500" Width="500">
    
    <Window.Resources>
        <Style TargetType="{x:Type BezierSegmentDemo:BezierFigure}">
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type BezierSegmentDemo:BezierFigure}">
                        <Canvas Background="AliceBlue">
                            
                            <!-- render the BezierSegment itself -->
                            <Path Stroke="{TemplateBinding Foreground}" StrokeThickness="2" >
                                <Path.Data>
                                    <PathGeometry>
                                        <PathGeometry.Figures>
                                            <PathFigureCollection>
                                                <PathFigure StartPoint="{Binding Path=StartPoint, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <PathFigure.Segments>
                                                        <PathSegmentCollection>
                                                            <BezierSegment Point1="{Binding Path=StartBezierPoint, RelativeSource={RelativeSource TemplatedParent}}"
                                                                           Point2="{Binding Path=EndBezierPoint, RelativeSource={RelativeSource TemplatedParent}}"
                                                                           Point3="{Binding Path=EndPoint, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                        </PathSegmentCollection>
                                                    </PathFigure.Segments>
                                                </PathFigure>
                                            </PathFigureCollection>
                                        </PathGeometry.Figures>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>

                            <!-- render the start vector -->
                            <Path Stroke="Gray" StrokeThickness="1" >
                                <Path.Data>
                                    <PathGeometry>
                                        <PathGeometry.Figures>
                                            <PathFigureCollection>
                                                <PathFigure StartPoint="{Binding Path=StartPoint, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <PathFigure.Segments>
                                                        <PathSegmentCollection>
                                                            <LineSegment Point="{Binding Path=StartPoint, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <LineSegment Point="{Binding Path=StartBezierPoint, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                        </PathSegmentCollection>
                                                    </PathFigure.Segments>
                                                </PathFigure>
                                            </PathFigureCollection>
                                        </PathGeometry.Figures>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>

                            <!-- render the end vector -->
                            <Path Stroke="Gray" StrokeThickness="1" >
                                <Path.Data>
                                    <PathGeometry>
                                        <PathGeometry.Figures>
                                            <PathFigureCollection>
                                                <PathFigure StartPoint="{Binding Path=EndPoint, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <PathFigure.Segments>
                                                        <PathSegmentCollection>
                                                            <LineSegment Point="{Binding Path=EndPoint, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <LineSegment Point="{Binding Path=EndBezierPoint, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                        </PathSegmentCollection>
                                                    </PathFigure.Segments>
                                                </PathFigure>
                                            </PathFigureCollection>
                                        </PathGeometry.Figures>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>

                            <BezierSegmentDemo:ThumbPoint
                                       Point="{Binding Path=StartPoint, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
							<BezierSegmentDemo:ThumbPoint
                                       Point="{Binding Path=StartBezierPoint, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
							<BezierSegmentDemo:ThumbPoint
                                       Point="{Binding Path=EndBezierPoint, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
							<BezierSegmentDemo:ThumbPoint
                                       Point="{Binding Path=EndPoint, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type BezierSegmentDemo:ThumbPoint}">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Height" Value="8"/>
            <Setter Property="Margin" Value="-4"/>
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="Canvas.Left" Value="{Binding Path=Point.X, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="Canvas.Top" Value="{Binding Path=Point.Y, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type BezierSegmentDemo:ThumbPoint}">
                        <Ellipse Fill="{TemplateBinding Background}" 
                                 Width="{TemplateBinding Width}" 
                                 Height="{TemplateBinding Height}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="2"/>
        </Style>

        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="2"/>
        </Style>

    </Window.Resources>
	<Grid>

    <DockPanel>

        <StackPanel DockPanel.Dock="Bottom" Background="Gray" TextElement.Foreground="White">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="StartPoint:"/>
                <TextBlock Text="{Binding ElementName=figure, Path=StartPoint, StringFormat=F0}"/>
                <TextBlock Text="StartBezierPoint:"/>
                <TextBlock Text="{Binding ElementName=figure, Path=StartBezierPoint, StringFormat=F0}"/>
                <TextBlock Text="EndPoint:"/>
                <TextBlock Text="{Binding ElementName=figure, Path=EndPoint, StringFormat=F0}"/>
                <TextBlock Text="EndBezierPoint:"/>
                <TextBlock Text="{Binding ElementName=figure, Path=EndBezierPoint, StringFormat=F0}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Num of Points: "/>
                <Slider Width="100" Minimum="4" Maximum="35" Value="{Binding NumPoints, Mode=TwoWay}"/>
                <TextBlock Text="Cut Bezier At: "/>
                <Slider Width="100" Minimum="0" Maximum="1" Value="{Binding CutPoint, Mode=TwoWay}"/>
            </StackPanel>
        </StackPanel>
        
        <StackPanel DockPanel.Dock="Top" Background="Gray" TextElement.Foreground="White">
            <TextBlock Text="Drag points to change the bezier figure"/>
			</StackPanel>
        
        <Border DockPanel.Dock="Top" BorderBrush="Black" BorderThickness="1">
			<Grid>
				<Canvas ClipToBounds="True">
                        <Rectangle Stroke="Green" 
                                   StrokeThickness="2"
                                   Canvas.Top="{Binding BezierBounds.Y}" 
                                   Canvas.Left="{Binding BezierBounds.X}"
                                   Width="{Binding BezierBounds.Width}" 
                                   Height="{Binding BezierBounds.Height}"
                               />
                        <BezierSegmentDemo:BezierFigure x:Name="figure"
						    StartPoint="40,80"
						    StartBezierPoint="100,300"
						    EndBezierPoint="400,80"
						    EndPoint="450,300"/>
					    <TextBlock Background="Yellow" 
							IsHitTestVisible="False"
							Text="{Binding MeasureMessage}" 
							Canvas.Top="{Binding Point.Y, ElementName=distance}"
							Canvas.Left="{Binding Point.X, ElementName=distance}"
							/>
					    <BezierSegmentDemo:ThumbPoint x:Name="distance" 
							Point="{Binding MeasurePoint, Mode=TwoWay}" 
							Background="Red"/>
				</Canvas>
                <Canvas x:Name="overlay2" IsHitTestVisible="False"></Canvas>
                <Canvas x:Name="overlay" IsHitTestVisible="False"></Canvas>
            </Grid>
        </Border>

    </DockPanel>
		
		
	</Grid>
</Window>
